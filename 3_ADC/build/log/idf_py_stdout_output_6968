[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\Nidhi\ESP32\3_ADC\build\bootloader\esp-idf\esptool_py && C:\Users\DNK133\.espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Users/DNK133/ESP/v5.3/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/Nidhi/ESP32/3_ADC/build/bootloader/bootloader.bin"
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/adc.c.obj
In file included from D:/Nidhi/ESP32/3_ADC/main/adc.c:4:
C:/Users/DNK133/ESP/v5.3/esp-idf/components/driver/deprecated/driver/adc.h:19:2: warning: #warning "legacy adc driver is deprecated, please migrate to use esp_adc/adc_oneshot.h and esp_adc/adc_continuous.h for oneshot mode and continuous mode drivers respectively" [-Wcpp]
   19 | #warning "legacy adc driver is deprecated, please migrate to use esp_adc/adc_oneshot.h and esp_adc/adc_continuous.h for oneshot mode and continuous mode drivers respectively"
      |  ^~~~~~~
[3/9] Linking C static library esp-idf\main\libmain.a
[4/9] Generating ld/sections.ld
[5/9] Building C object CMakeFiles/adc.elf.dir/project_elf_src_esp32.c.obj
[6/9] Linking CXX executable adc.elf
[7/9] Generating binary image from built executable
esptool.py v4.8.dev5
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/Nidhi/ESP32/3_ADC/build/adc.bin
[8/9] cmd.exe /C "cd /D D:\Nidhi\ESP32\3_ADC\build\esp-idf\esptool_py && C:\Users\DNK133\.espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Users/DNK133/ESP/v5.3/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/Nidhi/ESP32/3_ADC/build/partition_table/partition-table.bin D:/Nidhi/ESP32/3_ADC/build/adc.bin"
adc.bin binary size 0x2b6e0 bytes. Smallest app partition is 0x100000 bytes. 0xd4920 bytes (83%) free.
[8/9] cmd.exe /C "cd /D C:\Users\DNK133\ESP\v5.3\esp-idf\components\esptool_py && C:\Users\DNK133\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/DNK133/ESP/v5.3/esp-idf -D SERIAL_TOOL=C:/Users/DNK133/.espressif/python_env/idf5.3_py3.11_env/Scripts/python.exe;;C:/Users/DNK133/ESP/v5.3/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/Nidhi/ESP32/3_ADC/build -P C:/Users/DNK133/ESP/v5.3/esp-idf/components/esptool_py/run_serialesptool.py --chip esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 adc.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev5
Serial port COM3
Connecting...............
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c8:f0:9e:50:58:5c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003bfff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26752 bytes to 16352...
Writing at 0x00001000... (100 %)
Wrote 26752 bytes (16352 compressed) at 0x00001000 in 0.9 seconds (effective 230.8 kbit/s)...
Hash of data verified.
Compressed 177888 bytes to 94988...
Writing at 0x00010000... (16 %)
Writing at 0x0001c1da... (33 %)
Writing at 0x00021d34... (50 %)
Writing at 0x0002777c... (66 %)
Writing at 0x0002eecb... (83 %)
Writing at 0x000364bd... (100 %)
Wrote 177888 bytes (94988 compressed) at 0x00010000 in 2.8 seconds (effective 499.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 289.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
_tool.cmake"
